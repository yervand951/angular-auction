'use strict'

angular.module('adminPanel',[
    'ui.router',
    'ngAria',
    'ngStorage',
    'ngAnimate',
    'ngMaterial',
    // 'imageupload',
    'productAuction'
]);

angular.module('adminPanel').run([
    '$rootScope', '$state', '$stateParams','routePermission','$localStorage',
    function ($rootScope, $state, $stateParams, routePermission,$localStorage) {

        $rootScope.$on('$stateChangeStart',
            function (event, toState, toParams, fromState, fromParams) {
                var type = $localStorage.user ? $localStorage.user.user_type : 'guest'
                routePermission.check(type,toState,$state,event);
            }
        );
    }
]);

var productAuction = angular.module('productAuction',[]);
angular.module('adminPanel').config(['$stateProvider' ,'$urlRouterProvider',function config($stateProvider, $urlRouterProvider) {
    $urlRouterProvider.otherwise("/login");

    $stateProvider
        .state('product', {
            url: "/product",
            templateUrl: "template/admin/product.html",
            controller: ['$localStorage','$rootScope',function ($localStorage,$rootScope) {
                console.log('test product');
            }]
        })
        .state('auction', {
            url: "/auction",
            templateUrl: "template/admin/auction.html",
            controller: 'auctionController'
        })
        .state('index', {
            url: "/index",
            templateUrl: "template/admin/auction.html",
            controller: 'auctionController'
        })
        .state('login', {
            url: "/login",
            templateUrl: "template/admin/login.html",
            controller: 'LoginController'
        })
        .state('404', {
            url: "/404",
            template: "<login-module></login-module>"
        })
        .state('logout', {
            url: "/logout",
            controller: ['$localStorage','$rootScope','$scope','$state','$http',function ($localStorage,$rootScope,$scope,$state,$http) {

                var config = {headers: {
                    'page': 'loaded',
                    'Authorization': $localStorage.user ? 'Bearer ' + $localStorage.user.user_token: null
                }};

                $http.get('/logout',config).then(function (result) {
                });
                $localStorage.$reset();
                $rootScope.$broadcast('auth');
                $state.go('login');
            }]
        })

}]);
(function () {

    angular.module('adminPanel').service('Auth',Auth);
    
    function Auth() {
        
        return {
           isLoginedUser:isLoginedUser,
           isUser:isUser,
           isLAdmin:isAdmin
        };
        
        
        function isLoginedUser(){
            
        }
        
        function isUser() {
            
        }
        
        function isAdmin() {
            
        }
    } 
    
})();

(function () {
    angular.module('adminPanel').service('routePermission',routePermission);

    function routePermission() {
        var routeData = {
            admin : ['adminPanel','index','404','auction','product','index','logout'],
            guest : ['404']
        };

        return {
            check:check
        };

        function check(type,toParams,$state ,event) {

            if( type != 'admin' && toParams.name != 'login'){
                event.preventDefault();
                $state.go('login');
            }
        }
    }
})();
angular.module('adminPanel')
    .controller('adminPanelController',['$scope','$http','$rootScope','$localStorage',function ($scope, $http,$rootScope,$localStorage) {

            $scope.singleProduct = singleProduct;
            $scope.allProduct    = allProduct;
            $scope.createProduct = createProduct;
            $scope.showAuction = menuAuction;
            $scope.showProduct = menuProduct;
            $scope.allAuction = allAuction;
            $scope.products = [];
            $scope.showCont = [];
            if($localStorage.user){
                var config = {
                    headers: {
                        'page': 'loaded',
                        'Authorization': $localStorage.user.user_token ? 'Bearer ' + $localStorage.user.user_token: null
                    }
                };
            }



            $rootScope.$on('auth',function () {
                if($localStorage.user){
                    $scope.localStorage = $localStorage;
                    $scope.user_logined = $localStorage.user.user_logined;
                }else{
                    $scope.user_logined = false;
                }
            });

            init();


            function init() {
                getAllProducts();
            }

            function getAllProducts(){
                $http.get('/admin/product',config).then(function (result) {
                    $scope.products =  result.data.data;
                    $localStorage.products =  result.data.data;
                });
            }

            function menuAuction() {
                allDisable();
                $scope.showCont['auction'] =  true;
            }

            function menuProduct() {
                allDisable();
                $scope.showCont['product'] =  true;
            }


            function allProduct() {
                $http.get('/admin/product',config).then(function (result) {
                    $scope.products =  result.data.data;
                });
                allDisable();
                $scope.showCont['allProduct'] =  true;

            }

            function allAuction() {
                $http.get('/admin/auction',config).then(function (result) {
                    $localStorage.auctions = result.data.data;
                });
                allDisable();
                $scope.showCont['allProduct'] =  true;

            }

            function createProduct() {

                allDisable();
                $scope.showCont['createProduct'] =  true;

            }

            function  singleProduct($id) {
                debugger;
                allDisable();
                $scope.showCont['singleProduct'] =  true;
                console.log($id);

            }


            function allDisable() {
                console.log($scope.showCont);
                for(var value in $scope.showCont ) {
                    $scope.showCont[value] = false;
                }
            }
        }]
    );

angular.module('adminPanel')
    .controller('auctionController',['$localStorage','$scope','$http',function ($localStorage,$scope, $http) {

            $scope.create = create;
            $scope.auctions = $localStorage.auction;

            var config = {headers: {
                'page': 'loaded',
                'Authorization': $localStorage.user ? 'Bearer ' + $localStorage.user.user_token: null
            }};

            init()


            function init() {
                allAuctions();
            }

            function create(Auction){
                console.log($scope.Auction);
                $http.post('admin/auction', Auction, config)
            }

            function allAuctions() {
                $http.get('/admin/auction',config).then(function (result) {
                    $scope.auction =  result.data.data;
                    $localStorage.auction =  result.data.data;
                });
            }
        }]
    );

angular.module('adminPanel').controller('LoginController',['$scope','$http','$state','$localStorage',function ($scope,$http,$state,$localStorage) {

    var config = {headers: {
        'page': 'loaded',
        'Authorization': $localStorage.user ? 'Bearer ' + $localStorage.user.user_token: null
    }};


    $scope.login = function (data) {
        $http.post('/login',data,config).then(function (response) {
            console.log(response);
            if(response.status >= 200 && response.status <= 300){
                console.log(response);
                $localStorage.user = {
                    user_token: response.data.token,
                    user_name: response.data.name,
                    user_email: response.data.email,
                    user_type: response.data.type,
                    user_logined: true
                };
                console.log($localStorage.user);
                if(response.data.type == "admin"){
                    $state.go('auction');
                }else{
                    $state.go('login');
                }

            }
        })
    }
}]);
productAuction.controller('productAllCtrl',['$http','$scope','$localStorage',function ($http,$scope,$localStorage) {

    $scope.Product = {};
       var config = {headers: {
           'page': 'loaded',
           'Authorization': $localStorage.user.user_token ? 'Bearer ' + $localStorage.user : null
       }};

    $scope.products = function () {

        $http.get('/admin/product',config).then(function (result) {
            $scope.products =  result.data.data;
            $localStorage.products =  result.data.data;
        });
       }
   }]
);
productAuction.controller('productCreateCtrl',['$http','$scope','$localStorage',function ($http,$scope,$localStorage) {
    $scope.Product = {};
    var config = {
        headers: {
            'page': 'loaded',
            'Authorization': $localStorage.user ? 'Bearer ' + $localStorage.user.user_token : null
        }
    };

    $scope.create = function () {
        console.log($scope.Product);
        $http.post('admin/product', $scope.Product, config)
    };

    $scope.uploadComplete = function (content) {
        $scope.response = JSON.parse(content);
        console.log('test');
    }
    }]
);
productAuction.controller('productSingleCtrl',['$http','$scope',function ($http,$scope) {
    
}]);