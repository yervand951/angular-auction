'use strict'

angular.module('adminPanel',[
    'ui.router',
    'ngAria',
    'ngStorage',
    'ngAnimate',
    'ngMaterial',
    'ngMaterialSidemenu',
    'imageupload',
    'productAuction',
    'ngMessages'
]);

angular.module('adminPanel').run([
    '$rootScope', '$state', '$stateParams','routePermission','$localStorage',
    function ($rootScope, $state, $stateParams, routePermission,$localStorage) {

        $rootScope.$on('$stateChangeStart',
            function (event, toState, toParams, fromState, fromParams) {
                var type = $localStorage.user ? $localStorage.user.user_type : 'guest'
                routePermission.check(type,toState,$state,event);
            }
        );
    }
]);

angular.module('adminPanel')
 .controller('AppCtrl', function($scope, $mdDialog,$rootScope) {
        $scope.status = '  ';
        $scope.customFullscreen = false;
        $scope.dataValid = false;
        $scope.auctionActive = false;
        $scope.reviewActive = false;

         $rootScope.$on('openAuctionCreateForm',function (ev,$args) {

             $scope.auctionActive = true;
             console.log($scope.auctionActive);
         });

        $scope.showAlert = function(ev) {
            // Appending dialog to document.body to cover sidenav in docs app
            // Modal dialogs should fully cover application
            // to prevent interaction outside of dialog
            $mdDialog.show(
                $mdDialog.alert()
                    .parent(angular.element(document.querySelector('#popupContainer')))
                    .clickOutsideToClose(true)
                    .title('This is an alert title')
                    .textContent('You can specify some description text in here.')
                    .ariaLabel('Alert Dialog Demo')
                    .ok('Got it!')
                    .targetEvent(ev)
            );
        };

        $scope.showConfirm = function(ev) {
            // Appending dialog to document.body to cover sidenav in docs app
            var confirm = $mdDialog.confirm()
                .title('Would you like to delete your debt?')
                .textContent('All of the banks have agreed to forgive you your debts.')
                .ariaLabel('Lucky day')
                .targetEvent(ev)
                .ok('Please do it!')
                .cancel('Sounds like a scam');

            $mdDialog.show(confirm).then(function() {
                $scope.status = 'You decided to get rid of your debt.';
            }, function() {
                $scope.status = 'You decided to keep your debt.';
            });
        };

        $scope.showPrompt = function(ev) {
            // Appending dialog to document.body to cover sidenav in docs app
            var confirm = $mdDialog.prompt()
                .title('What would you name your dog?')
                .textContent('Bowser is a common name.')
                .placeholder('Dog name')
                .ariaLabel('Dog name')
                .initialValue('Buddy')
                .targetEvent(ev)
                .ok('Okay!')
                .cancel('I\'m a cat person');

            $mdDialog.show(confirm).then(function(result) {
                $scope.status = 'You decided to name your dog ' + result + '.';
            }, function() {
                $scope.status = 'You didn\'t name your dog.';
            });
        };

        $scope.showAdvanced = function(ev) {
            $mdDialog.show({
                controller: DialogController,
                // templateUrl: 'dialog1.tmpl.html',
                parent: angular.element(document.body),
                targetEvent: ev,
                clickOutsideToClose:true,
                fullscreen: $scope.customFullscreen // Only for -xs, -sm breakpoints.
            })
                .then(function(answer) {
                    $scope.status = 'You said the information was "' + answer + '".';
                }, function() {
                    $scope.status = 'You cancelled the dialog.';
                });
        };

        $scope.showTabDialog = function(ev) {
            $mdDialog.show({
                controller: CreateProductController,
                templateUrl: 'tabDialog.tmpl.html',
                parent: angular.element(document.body),
                targetEvent: ev,
                clickOutsideToClose:true
            })
                .then(function(answer) {
                    $scope.status = 'You said the information was "' + answer + '".';
                }, function() {
                    $scope.status = 'You cancelled the dialog.';
                });
        };

        $scope.showPrerenderedDialog = function(ev) {
            $mdDialog.show({
                controller: DialogController,
                contentElement: '#myDialog',
                parent: angular.element(document.body),
                targetEvent: ev,
                clickOutsideToClose: true
            });
        };



    });
var productAuction = angular.module('productAuction',[]);
angular.module('adminPanel').config(['$stateProvider' ,'$urlRouterProvider',function config($stateProvider, $urlRouterProvider) {
    $urlRouterProvider.otherwise("/login");

    $stateProvider
        .state('product', {
            url: "/product",
            templateUrl: "template/admin/product.html",
            controller: ['$localStorage','$rootScope',function ($localStorage,$rootScope) {
                console.log('test product');
            }]
        })
        .state('auction', {
            url: "/auction",
            templateUrl: "template/admin/auction.html",
            controller: 'auctionController'
        })
        .state('index', {
            url: "/index",
            templateUrl: "template/admin/auction.html",
            controller: 'auctionController'
        })
        .state('login', {
            url: "/login",
            templateUrl: "template/admin/login.html",
            controller: 'LoginController'
        })
        .state('404', {
            url: "/404",
            template: "<login-module></login-module>"
        })
        .state('logout', {
            url: "/logout",
            controller: ['$localStorage','$rootScope','$scope','$state','$http',function ($localStorage,$rootScope,$scope,$state,$http) {

                var config = {headers: {
                    'page': 'loaded',
                    'Authorization': $localStorage.user ? 'Bearer ' + $localStorage.user.user_token: null
                }};

                $http.get('/logout',config).then(function (result) {
                });
                $localStorage.$reset();
                $rootScope.$broadcast('auth');
                $state.go('login');
            }]
        })

}]);
(function () {

    angular.module('adminPanel').service('Auth',Auth);
    
    function Auth() {
        
        return {
           isLoginedUser:isLoginedUser,
           isUser:isUser,
           isLAdmin:isAdmin
        };
        
        
        function isLoginedUser(){
            
        }
        
        function isUser() {
            
        }
        
        function isAdmin() {
            
        }
    } 
    
})();

(function () {
    angular.module('adminPanel').service('routePermission',routePermission);

    function routePermission() {
        var routeData = {
            admin : ['adminPanel','index','404','auction','product','index','logout'],
            guest : ['404']
        };

        return {
            check:check
        };

        function check(type,toParams,$state ,event) {

            if( type != 'admin' && toParams.name != 'login'){
                event.preventDefault();
                $state.go('login');
            }
        }
    }
})();
angular.module('adminPanel')
    .controller('adminPanelController',['$scope','$http','$rootScope','$localStorage',function ($scope, $http,$rootScope,$localStorage) {

            $scope.singleProduct = singleProduct;
            $scope.allProduct    = allProduct;
            $scope.createProduct = createProduct;
            $scope.showAuction = menuAuction;
            $scope.showProduct = menuProduct;
            $scope.allAuction = allAuction;
            $scope.createAuction = createAuction;
            $scope.singleProductObj = {};
            $scope.products = [];
            $scope.showCont = [];
        
            if($localStorage.user){
                var config = {
                    headers: {
                        'page': 'loaded',
                        'Authorization': $localStorage.user.user_token ? 'Bearer ' + $localStorage.user.user_token: null
                    }
                };
            }

            $rootScope.$on('auth',function () {
                if($localStorage.user){
                    $scope.localStorage = $localStorage;
                    $scope.user_logined = $localStorage.user.user_logined;
                }else{
                    $scope.user_logined = false;
                }
            });

            init();


            function init() {
                getAllProducts();
                getAllAuction();
            }

            function getAllAuction() {
                $http.get('/admin/auction',config).then(function (result) {
                    result = sortById(result.data.data);
                    $localStorage.auctions = result;
                    $scope.auctions = result;
                });
            }

            function getAllProducts(){
                $http.get('/admin/product',config).then(function (result) {
                    result = sortById(result.data.data);
                    $scope.products =  result;
                    $localStorage.products =  result;
                });
            }

            function sortById(data) {
                var length =  data.length;
                var result = {};

                for(var i = 0; i < length; i++){
                    result[data[i].id] = data[i];
                }

                return result;
            }

            function allProduct() {
                getAllAuction();
                allDisable();
                $scope.showCont['allProduct'] =  true;
            }

            function createProduct() {
                allDisable();
                $scope.showCont['createProduct'] =  true;
            }

            function createAuction(){
                allDisable();
                $scope.showCont['createAuction'] =  true;
            }

            function allAuction() {
                getAllAuction();
                allDisable();
                $scope.showCont['allProduct'] =  true;
            }

            function menuAuction() {
                allDisable();
            }

            function menuProduct() {
                allDisable();
            }

            function  singleProduct(id) {
                $scope.singleProductObj = $scope.products[id];
                console.log($scope.singleProductObj);
                allDisable();
                $scope.showCont['singleProduct'] =  true;
            }


            function allDisable() {
                console.log($scope.showCont);
                for(var value in $scope.showCont ) {
                    $scope.showCont[value] = false;
                }
            }
        }]
    );

angular.module('adminPanel')
    .controller('auctionController',['$localStorage','$scope','$http',function ($localStorage,$scope, $http) {

            $scope.create = create;
            $scope.auctions = $localStorage.auction;

            var config = {headers: {
                'page': 'loaded',
                'Authorization': $localStorage.user ? 'Bearer ' + $localStorage.user.user_token: null
            }};

            init()


            function init() {
                allAuctions();
            }

            function create(Auction){
                console.log($scope.Auction);
                $http.post('admin/auction', Auction, config)
            }

            function allAuctions() {
                $http.get('/admin/auction',config).then(function (result) {
                    $scope.auction =  result.data.data;
                    $localStorage.auction =  result.data.data;
                });
            }
        }]
    );

angular.module('adminPanel').controller('LoginController',['$scope','$http','$state','$localStorage',function ($scope,$http,$state,$localStorage) {

    var config = {headers: {
        'page': 'loaded',
        'Authorization': $localStorage.user ? 'Bearer ' + $localStorage.user.user_token: null
    }};


    $scope.login = function (data) {
        $http.post('/login',data,config).then(function (response) {
            console.log(response);
            if(response.status >= 200 && response.status <= 300){
                console.log(response);
                $localStorage.user = {
                    user_token: response.data.token,
                    user_name: response.data.name,
                    user_email: response.data.email,
                    user_type: response.data.type,
                    user_logined: true
                };
                console.log($localStorage.user);
                if(response.data.type == "admin"){
                    $state.go('auction');
                }else{
                    $state.go('login');
                }

            }
        })
    }
}]);
productAuction.controller('productAllCtrl',['$http','$scope','$localStorage',function ($http,$scope,$localStorage) {

    $scope.Product = {};
       var config = {headers: {
           'page': 'loaded',
           'Authorization': $localStorage.user.user_token ? 'Bearer ' + $localStorage.user : null
       }};

    $scope.products = function () {

        $http.get('/admin/product',config).then(function (result) {
            $scope.products =  result.data.data;
            $localStorage.products =  result.data.data;
        });
       }
   }]
);
var adminPanel = angular.module('adminPanel');

adminPanel.controller('CreateProductController',CreateProductController)

CreateProductController.$inject = ['$http','$scope','$localStorage','$rootScope'];

function CreateProductController($http,$scope,$localStorage,$rootScope) {
    $scope.Product = {};
    $scope.validator = ProductValidator;
    $scope.validData = {};
    $scope.create = create;
    $scope.uploadComplete = uploadComplete;
    $scope.auctionActive = false;

    var config = {
        headers: {
            'page': 'loaded',
            'Authorization': $localStorage.user ? 'Bearer ' + $localStorage.user.user_token : null
        }
    };

    function create(Product) {
        console.log(Product);
        $http.post('admin/product',Product, config);
        $scope.auctionActive = true;
        // $rootScope.$broadcast('openAuctionCreateForm',{
        //     formInvalid : true
        // })
    };

    function uploadComplete(content) {
        $scope.response = JSON.parse(content);
        console.log('test');
    };

    function ProductValidator() {
        if($scope.validData.name && $scope.validData.price && $scope.validData.description){
            $rootScope.$broadcast('createProductFormValid',{
                formInvalid : true
            })
        }else {
            $rootScope.$broadcast('createProductFormValid',{
                formInvalid : false
            })
        }
    }

    $scope.hide = function() {
        $mdDialog.hide();
    };

    $scope.cancel = function() {
        $mdDialog.cancel();
    };

    $scope.answer = function(answer) {
        $mdDialog.hide(answer);
    };
};
productAuction.controller('productSingleCtrl',['$http','$scope',function ($http,$scope) {
    
}]);